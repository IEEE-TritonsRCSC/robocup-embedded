/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_PROTO_VISION_MESSAGES_ROBOCUP_SSL_DETECTION_PB_H_INCLUDED
#define PB_PROTO_VISION_MESSAGES_ROBOCUP_SSL_DETECTION_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _proto_vision_SSL_DetectionBall {
    float confidence;
    bool has_area;
    uint32_t area;
    float x;
    float y;
    bool has_z;
    float z;
    float pixel_x;
    float pixel_y;
} proto_vision_SSL_DetectionBall;

typedef struct _proto_vision_SSL_DetectionRobot {
    float confidence;
    bool has_robot_id;
    uint32_t robot_id;
    float x;
    float y;
    bool has_orientation;
    float orientation;
    float pixel_x;
    float pixel_y;
    bool has_height;
    float height;
} proto_vision_SSL_DetectionRobot;

typedef struct _proto_vision_SSL_DetectionFrame {
    uint32_t frame_number;
    double t_capture;
    double t_sent;
    uint32_t camera_id;
    pb_callback_t balls;
    pb_callback_t robots_yellow;
    pb_callback_t robots_blue;
} proto_vision_SSL_DetectionFrame;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define proto_vision_SSL_DetectionBall_init_default {0, false, 0, 0, 0, false, 0, 0, 0}
#define proto_vision_SSL_DetectionRobot_init_default {0, false, 0, 0, 0, false, 0, 0, 0, false, 0}
#define proto_vision_SSL_DetectionFrame_init_default {0, 0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define proto_vision_SSL_DetectionBall_init_zero {0, false, 0, 0, 0, false, 0, 0, 0}
#define proto_vision_SSL_DetectionRobot_init_zero {0, false, 0, 0, 0, false, 0, 0, 0, false, 0}
#define proto_vision_SSL_DetectionFrame_init_zero {0, 0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define proto_vision_SSL_DetectionBall_confidence_tag 1
#define proto_vision_SSL_DetectionBall_area_tag  2
#define proto_vision_SSL_DetectionBall_x_tag     3
#define proto_vision_SSL_DetectionBall_y_tag     4
#define proto_vision_SSL_DetectionBall_z_tag     5
#define proto_vision_SSL_DetectionBall_pixel_x_tag 6
#define proto_vision_SSL_DetectionBall_pixel_y_tag 7
#define proto_vision_SSL_DetectionRobot_confidence_tag 1
#define proto_vision_SSL_DetectionRobot_robot_id_tag 2
#define proto_vision_SSL_DetectionRobot_x_tag    3
#define proto_vision_SSL_DetectionRobot_y_tag    4
#define proto_vision_SSL_DetectionRobot_orientation_tag 5
#define proto_vision_SSL_DetectionRobot_pixel_x_tag 6
#define proto_vision_SSL_DetectionRobot_pixel_y_tag 7
#define proto_vision_SSL_DetectionRobot_height_tag 8
#define proto_vision_SSL_DetectionFrame_frame_number_tag 1
#define proto_vision_SSL_DetectionFrame_t_capture_tag 2
#define proto_vision_SSL_DetectionFrame_t_sent_tag 3
#define proto_vision_SSL_DetectionFrame_camera_id_tag 4
#define proto_vision_SSL_DetectionFrame_balls_tag 5
#define proto_vision_SSL_DetectionFrame_robots_yellow_tag 6
#define proto_vision_SSL_DetectionFrame_robots_blue_tag 7

/* Struct field encoding specification for nanopb */
#define proto_vision_SSL_DetectionBall_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    confidence,        1) \
X(a, STATIC,   OPTIONAL, UINT32,   area,              2) \
X(a, STATIC,   REQUIRED, FLOAT,    x,                 3) \
X(a, STATIC,   REQUIRED, FLOAT,    y,                 4) \
X(a, STATIC,   OPTIONAL, FLOAT,    z,                 5) \
X(a, STATIC,   REQUIRED, FLOAT,    pixel_x,           6) \
X(a, STATIC,   REQUIRED, FLOAT,    pixel_y,           7)
#define proto_vision_SSL_DetectionBall_CALLBACK NULL
#define proto_vision_SSL_DetectionBall_DEFAULT NULL

#define proto_vision_SSL_DetectionRobot_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    confidence,        1) \
X(a, STATIC,   OPTIONAL, UINT32,   robot_id,          2) \
X(a, STATIC,   REQUIRED, FLOAT,    x,                 3) \
X(a, STATIC,   REQUIRED, FLOAT,    y,                 4) \
X(a, STATIC,   OPTIONAL, FLOAT,    orientation,       5) \
X(a, STATIC,   REQUIRED, FLOAT,    pixel_x,           6) \
X(a, STATIC,   REQUIRED, FLOAT,    pixel_y,           7) \
X(a, STATIC,   OPTIONAL, FLOAT,    height,            8)
#define proto_vision_SSL_DetectionRobot_CALLBACK NULL
#define proto_vision_SSL_DetectionRobot_DEFAULT NULL

#define proto_vision_SSL_DetectionFrame_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   frame_number,      1) \
X(a, STATIC,   REQUIRED, DOUBLE,   t_capture,         2) \
X(a, STATIC,   REQUIRED, DOUBLE,   t_sent,            3) \
X(a, STATIC,   REQUIRED, UINT32,   camera_id,         4) \
X(a, CALLBACK, REPEATED, MESSAGE,  balls,             5) \
X(a, CALLBACK, REPEATED, MESSAGE,  robots_yellow,     6) \
X(a, CALLBACK, REPEATED, MESSAGE,  robots_blue,       7)
#define proto_vision_SSL_DetectionFrame_CALLBACK pb_default_field_callback
#define proto_vision_SSL_DetectionFrame_DEFAULT NULL
#define proto_vision_SSL_DetectionFrame_balls_MSGTYPE proto_vision_SSL_DetectionBall
#define proto_vision_SSL_DetectionFrame_robots_yellow_MSGTYPE proto_vision_SSL_DetectionRobot
#define proto_vision_SSL_DetectionFrame_robots_blue_MSGTYPE proto_vision_SSL_DetectionRobot

extern const pb_msgdesc_t proto_vision_SSL_DetectionBall_msg;
extern const pb_msgdesc_t proto_vision_SSL_DetectionRobot_msg;
extern const pb_msgdesc_t proto_vision_SSL_DetectionFrame_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define proto_vision_SSL_DetectionBall_fields &proto_vision_SSL_DetectionBall_msg
#define proto_vision_SSL_DetectionRobot_fields &proto_vision_SSL_DetectionRobot_msg
#define proto_vision_SSL_DetectionFrame_fields &proto_vision_SSL_DetectionFrame_msg

/* Maximum encoded size of messages (where known) */
/* proto_vision_SSL_DetectionFrame_size depends on runtime parameters */
#define PROTO_VISION_MESSAGES_ROBOCUP_SSL_DETECTION_PB_H_MAX_SIZE proto_vision_SSL_DetectionRobot_size
#define proto_vision_SSL_DetectionBall_size      36
#define proto_vision_SSL_DetectionRobot_size     41

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
