/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_PROTO_SIMULATION_SSL_SIMULATION_ROBOT_CONTROL_PB_H_INCLUDED
#define PB_PROTO_SIMULATION_SSL_SIMULATION_ROBOT_CONTROL_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* Move robot with wheel velocities */
typedef struct _proto_simulation_MoveWheelVelocity {
    /* Velocity [m/s] of front right wheel */
    float front_right;
    /* Velocity [m/s] of back right wheel */
    float back_right;
    /* Velocity [m/s] of back left wheel */
    float back_left;
    /* Velocity [m/s] of front left wheel */
    float front_left;
} proto_simulation_MoveWheelVelocity;

/* Move robot with local velocity */
typedef struct _proto_simulation_MoveLocalVelocity {
    /* Velocity forward [m/s] (towards the dribbler) */
    float forward;
    /* Velocity to the left [m/s] */
    float left;
    /* Angular velocity counter-clockwise [rad/s] */
    float angular;
} proto_simulation_MoveLocalVelocity;

/* Move robot with global velocity */
typedef struct _proto_simulation_MoveGlobalVelocity {
    /* Velocity on x-axis of the field [m/s] */
    float x;
    /* Velocity on y-axis of the field [m/s] */
    float y;
    /* Angular velocity counter-clockwise [rad/s] */
    float angular;
} proto_simulation_MoveGlobalVelocity;

/* Wrapper for different kinds of movement commands */
typedef struct _proto_simulation_RobotMoveCommand {
    pb_size_t which_command;
    union {
        /* Move with wheel velocities */
        proto_simulation_MoveWheelVelocity wheel_velocity;
        /* Move with local velocity */
        proto_simulation_MoveLocalVelocity local_velocity;
        /* Move with global velocity */
        proto_simulation_MoveGlobalVelocity global_velocity;
    } command;
} proto_simulation_RobotMoveCommand;

/* Full command for a single robot */
typedef struct _proto_simulation_RobotCommand {
    /* Id of the robot */
    uint32_t id;
    /* Movement command */
    bool has_move_command;
    proto_simulation_RobotMoveCommand move_command;
    /* Absolute (3 dimensional) kick speed [m/s] */
    bool has_kick_speed;
    float kick_speed;
    /* Kick angle [degree] (defaults to 0 degrees for a straight kick) */
    bool has_kick_angle;
    float kick_angle;
    /* Dribbler speed in rounds per minute [rpm] */
    bool has_dribbler_speed;
    float dribbler_speed;
} proto_simulation_RobotCommand;

/* Command from the connected client to the simulator */
typedef struct _proto_simulation_RobotControl {
    /* Control the robots */
    pb_callback_t robot_commands;
} proto_simulation_RobotControl;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define proto_simulation_RobotCommand_init_default {0, false, proto_simulation_RobotMoveCommand_init_default, false, 0, false, 0.0f, false, 0}
#define proto_simulation_RobotMoveCommand_init_default {0, {proto_simulation_MoveWheelVelocity_init_default}}
#define proto_simulation_MoveWheelVelocity_init_default {0, 0, 0, 0}
#define proto_simulation_MoveLocalVelocity_init_default {0, 0, 0}
#define proto_simulation_MoveGlobalVelocity_init_default {0, 0, 0}
#define proto_simulation_RobotControl_init_default {{{NULL}, NULL}}
#define proto_simulation_RobotCommand_init_zero  {0, false, proto_simulation_RobotMoveCommand_init_zero, false, 0, false, 0, false, 0}
#define proto_simulation_RobotMoveCommand_init_zero {0, {proto_simulation_MoveWheelVelocity_init_zero}}
#define proto_simulation_MoveWheelVelocity_init_zero {0, 0, 0, 0}
#define proto_simulation_MoveLocalVelocity_init_zero {0, 0, 0}
#define proto_simulation_MoveGlobalVelocity_init_zero {0, 0, 0}
#define proto_simulation_RobotControl_init_zero  {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define proto_simulation_MoveWheelVelocity_front_right_tag 1
#define proto_simulation_MoveWheelVelocity_back_right_tag 2
#define proto_simulation_MoveWheelVelocity_back_left_tag 3
#define proto_simulation_MoveWheelVelocity_front_left_tag 4
#define proto_simulation_MoveLocalVelocity_forward_tag 1
#define proto_simulation_MoveLocalVelocity_left_tag 2
#define proto_simulation_MoveLocalVelocity_angular_tag 3
#define proto_simulation_MoveGlobalVelocity_x_tag 1
#define proto_simulation_MoveGlobalVelocity_y_tag 2
#define proto_simulation_MoveGlobalVelocity_angular_tag 3
#define proto_simulation_RobotMoveCommand_wheel_velocity_tag 1
#define proto_simulation_RobotMoveCommand_local_velocity_tag 2
#define proto_simulation_RobotMoveCommand_global_velocity_tag 3
#define proto_simulation_RobotCommand_id_tag     1
#define proto_simulation_RobotCommand_move_command_tag 2
#define proto_simulation_RobotCommand_kick_speed_tag 3
#define proto_simulation_RobotCommand_kick_angle_tag 4
#define proto_simulation_RobotCommand_dribbler_speed_tag 5
#define proto_simulation_RobotControl_robot_commands_tag 1

/* Struct field encoding specification for nanopb */
#define proto_simulation_RobotCommand_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   id,                1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  move_command,      2) \
X(a, STATIC,   OPTIONAL, FLOAT,    kick_speed,        3) \
X(a, STATIC,   OPTIONAL, FLOAT,    kick_angle,        4) \
X(a, STATIC,   OPTIONAL, FLOAT,    dribbler_speed,    5)
#define proto_simulation_RobotCommand_CALLBACK NULL
#define proto_simulation_RobotCommand_DEFAULT (const pb_byte_t*)"\x25\x00\x00\x00\x00\x00"
#define proto_simulation_RobotCommand_move_command_MSGTYPE proto_simulation_RobotMoveCommand

#define proto_simulation_RobotMoveCommand_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,wheel_velocity,command.wheel_velocity),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,local_velocity,command.local_velocity),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (command,global_velocity,command.global_velocity),   3)
#define proto_simulation_RobotMoveCommand_CALLBACK NULL
#define proto_simulation_RobotMoveCommand_DEFAULT NULL
#define proto_simulation_RobotMoveCommand_command_wheel_velocity_MSGTYPE proto_simulation_MoveWheelVelocity
#define proto_simulation_RobotMoveCommand_command_local_velocity_MSGTYPE proto_simulation_MoveLocalVelocity
#define proto_simulation_RobotMoveCommand_command_global_velocity_MSGTYPE proto_simulation_MoveGlobalVelocity

#define proto_simulation_MoveWheelVelocity_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    front_right,       1) \
X(a, STATIC,   REQUIRED, FLOAT,    back_right,        2) \
X(a, STATIC,   REQUIRED, FLOAT,    back_left,         3) \
X(a, STATIC,   REQUIRED, FLOAT,    front_left,        4)
#define proto_simulation_MoveWheelVelocity_CALLBACK NULL
#define proto_simulation_MoveWheelVelocity_DEFAULT NULL

#define proto_simulation_MoveLocalVelocity_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    forward,           1) \
X(a, STATIC,   REQUIRED, FLOAT,    left,              2) \
X(a, STATIC,   REQUIRED, FLOAT,    angular,           3)
#define proto_simulation_MoveLocalVelocity_CALLBACK NULL
#define proto_simulation_MoveLocalVelocity_DEFAULT NULL

#define proto_simulation_MoveGlobalVelocity_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    x,                 1) \
X(a, STATIC,   REQUIRED, FLOAT,    y,                 2) \
X(a, STATIC,   REQUIRED, FLOAT,    angular,           3)
#define proto_simulation_MoveGlobalVelocity_CALLBACK NULL
#define proto_simulation_MoveGlobalVelocity_DEFAULT NULL

#define proto_simulation_RobotControl_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  robot_commands,    1)
#define proto_simulation_RobotControl_CALLBACK pb_default_field_callback
#define proto_simulation_RobotControl_DEFAULT NULL
#define proto_simulation_RobotControl_robot_commands_MSGTYPE proto_simulation_RobotCommand

extern const pb_msgdesc_t proto_simulation_RobotCommand_msg;
extern const pb_msgdesc_t proto_simulation_RobotMoveCommand_msg;
extern const pb_msgdesc_t proto_simulation_MoveWheelVelocity_msg;
extern const pb_msgdesc_t proto_simulation_MoveLocalVelocity_msg;
extern const pb_msgdesc_t proto_simulation_MoveGlobalVelocity_msg;
extern const pb_msgdesc_t proto_simulation_RobotControl_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define proto_simulation_RobotCommand_fields &proto_simulation_RobotCommand_msg
#define proto_simulation_RobotMoveCommand_fields &proto_simulation_RobotMoveCommand_msg
#define proto_simulation_MoveWheelVelocity_fields &proto_simulation_MoveWheelVelocity_msg
#define proto_simulation_MoveLocalVelocity_fields &proto_simulation_MoveLocalVelocity_msg
#define proto_simulation_MoveGlobalVelocity_fields &proto_simulation_MoveGlobalVelocity_msg
#define proto_simulation_RobotControl_fields &proto_simulation_RobotControl_msg

/* Maximum encoded size of messages (where known) */
/* proto_simulation_RobotControl_size depends on runtime parameters */
#define PROTO_SIMULATION_SSL_SIMULATION_ROBOT_CONTROL_PB_H_MAX_SIZE proto_simulation_RobotCommand_size
#define proto_simulation_MoveGlobalVelocity_size 15
#define proto_simulation_MoveLocalVelocity_size  15
#define proto_simulation_MoveWheelVelocity_size  20
#define proto_simulation_RobotCommand_size       45
#define proto_simulation_RobotMoveCommand_size   22

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
